import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Female-title"
  }, title), React.createElement("path", {
    d: "M18.5 8.5C18.5 4.916 15.584 2 12 2S5.5 4.916 5.5 8.5c0 3.243 2.39 5.932 5.5 6.415V17H8v2h3v2.988h2V19h3v-2h-3v-2.085c3.109-.483 5.5-3.172 5.5-6.415zm-11 0C7.5 6.019 9.519 4 12 4s4.5 2.019 4.5 4.5a4.505 4.505 0 0 1-4.495 4.5h-.01A4.505 4.505 0 0 1 7.5 8.5z",
    key: "k0"
  }));
});
export const Female = styled(StyledIcon).withConfig({
  displayName: "Female",
  componentId: "sc-150xfns-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Female.displayName = 'Female';
export const FemaleDimensions = {
  height: 24,
  width: 24
};