import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Shield-title"
  }, title), React.createElement("path", {
    d: "M20.995 6.903a.997.997 0 0 0-.547-.797l-7.973-4a.997.997 0 0 0-.895-.002l-8.027 4c-.297.15-.502.437-.544.767-.013.097-1.145 9.741 8.541 15.008a.995.995 0 0 0 .969-.009c9.307-5.259 8.514-14.573 8.476-14.967zm-8.977 12.944c-6.86-4.01-7.14-10.352-7.063-12.205l7.071-3.523 6.998 3.511c.005 1.87-.481 8.243-7.006 12.217z",
    key: "k0"
  }));
});
export const Shield = styled(StyledIcon).withConfig({
  displayName: "Shield",
  componentId: "rahfr1-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Shield.displayName = 'Shield';
export const ShieldDimensions = {
  height: 24,
  width: 24
};