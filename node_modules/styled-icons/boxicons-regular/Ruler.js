import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Ruler-title"
  }, title), React.createElement("path", {
    d: "M19.875 7H4.125C2.953 7 2 7.897 2 9v6c0 1.103.953 2 2.125 2h15.75C21.047 17 22 16.103 22 15V9c0-1.103-.953-2-2.125-2zm0 8H4.125c-.057 0-.096-.016-.113-.016-.007 0-.011.002-.012.008l-.012-5.946c.007-.01.052-.046.137-.046H7v3h2V9h2v4h2V9h2v3h2V9h2.875c.079.001.123.028.125.008l.012 5.946c-.007.01-.052.046-.137.046z",
    key: "k0"
  }));
});
export const Ruler = styled(StyledIcon).withConfig({
  displayName: "Ruler",
  componentId: "n6nf8i-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Ruler.displayName = 'Ruler';
export const RulerDimensions = {
  height: 24,
  width: 24
};