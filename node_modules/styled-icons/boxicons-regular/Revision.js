import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Revision-title"
  }, title), React.createElement("path", {
    d: "M15.975 5L12 2v2a8.94 8.94 0 0 0-6.364 2.636A8.94 8.94 0 0 0 3 13c0 2.404.936 4.664 2.636 6.363C7.336 21.063 9.596 22 12 22s4.664-.937 6.363-2.637A8.938 8.938 0 0 0 21 13h-2c0 1.87-.729 3.627-2.051 4.949S13.87 20 12 20c-1.87 0-3.627-.729-4.95-2.051S5 14.87 5 13c0-1.87.728-3.627 2.05-4.95S10.13 6 12 6v2l3.975-3z",
    key: "k0"
  }));
});
export const Revision = styled(StyledIcon).withConfig({
  displayName: "Revision",
  componentId: "sc-3fvj5p-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Revision.displayName = 'Revision';
export const RevisionDimensions = {
  height: 24,
  width: 24
};