"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilterAltDimensions = exports.FilterAlt = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _isPropValid = _interopRequireDefault(require("@emotion/is-prop-valid"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      otherProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  var svgProps = Object.keys(otherProps).reduce(function (p, k) {
    if ((0, _isPropValid.default)(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "FilterAlt-title"
  }, title), React.createElement("path", {
    d: "M3 6.586c0 .526.214 1.042.586 1.414L11 15.414V22l2-2v-4.586L20.414 8c.372-.372.586-.888.586-1.414V3H3v3.586z",
    key: "k0"
  }));
});
var FilterAlt = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "FilterAltcjs__FilterAlt",
  componentId: "sc-1wlzjzt-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.FilterAlt = FilterAlt;
FilterAlt.displayName = 'FilterAlt';
var FilterAltDimensions = {
  height: 24,
  width: 24
};
exports.FilterAltDimensions = FilterAltDimensions;