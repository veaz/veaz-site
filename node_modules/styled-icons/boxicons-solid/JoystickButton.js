import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "JoystickButton-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M18 14l2-2-2-2zM6 14v-4l-2 2zm6 6l2-2h-4zM10 6h4l-2-2z",
    key: "k0"
  }), ",", React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 2,
    fill: "none",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M20 8h-4V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v4H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zM6 14l-2-2 2-2v4zm6 6l-2-2h4l-2 2zm0-6a2 2 0 1 1 .001-4.001A2 2 0 0 1 12 14zm-2-8l2-2 2 2h-4zm8 8v-4l2 2-2 2z",
    key: "k2"
  }));
});
export const JoystickButton = styled(StyledIcon).withConfig({
  displayName: "JoystickButton",
  componentId: "sc-1873aus-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
JoystickButton.displayName = 'JoystickButton';
export const JoystickButtonDimensions = {
  height: 24,
  width: 24
};