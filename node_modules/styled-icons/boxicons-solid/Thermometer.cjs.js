"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ThermometerDimensions = exports.Thermometer = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _isPropValid = _interopRequireDefault(require("@emotion/is-prop-valid"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      otherProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  var svgProps = Object.keys(otherProps).reduce(function (p, k) {
    if ((0, _isPropValid.default)(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Thermometer-title"
  }, title), React.createElement("path", {
    d: "M13 17c0-1.569-.677-2.974-1.835-3.906l-.165-.33V5c0-1.654-1.346-3-3-3S5 3.346 5 5V12.764l-.165.33C3.677 14.026 3 15.431 3 17c0 .043.012.082.013.124.002.018.002.034.005.051C3.112 19.85 5.303 22 8 22s4.888-2.15 4.982-4.825c.003-.017.003-.033.005-.051.001-.042.013-.081.013-.124zM8 4c.552 0 1 .449 1 1v4H7V5c0-.551.448-1 1-1zm5-1h7v2h-7zm0 4h5v2h-5zm0 4h3v2h-3z",
    key: "k0"
  }));
});
var Thermometer = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Thermometercjs__Thermometer",
  componentId: "sc-1bh10k9-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Thermometer = Thermometer;
Thermometer.displayName = 'Thermometer';
var ThermometerDimensions = {
  height: 24,
  width: 24
};
exports.ThermometerDimensions = ThermometerDimensions;