import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Conversation-title"
  }, title), React.createElement("path", {
    d: "M13 13h2c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2H5c-1.103 0-2 .897-2 2v13.081L9.351 13H13z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M15.351 15H10v2h4.649L21 22.081V8h-2v4a3 3 0 0 1-3 3h-.649z",
    key: "k1"
  }));
});
export const Conversation = styled(StyledIcon).withConfig({
  displayName: "Conversation",
  componentId: "sc-1jxgaic-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Conversation.displayName = 'Conversation';
export const ConversationDimensions = {
  height: 24,
  width: 24
};