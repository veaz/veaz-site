import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Rename-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M6 10h9v4H6z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M22 16V8a2 2 0 0 0-2-2h-1v12h1a2 2 0 0 0 2-2z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M4 18h11c0 .094-.048 2-3 2v2c2.003 0 3.257-.673 4.01-1.517.049.055.089.111.143.165C17.047 21.546 18.342 22 20 22v-2c-2.803 0-2.991-1.676-3-1.998V6.024C17.013 5.686 17.22 4 20 4V2c-1.986 0-3.238.67-3.993 1.511C15.255 2.67 14 2 12 2v2c2.8 0 2.99 1.678 3 2H4a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2zm2-8h9v4H6v-4z",
    key: "k2"
  }));
});
export const Rename = styled(StyledIcon).withConfig({
  displayName: "Rename",
  componentId: "x1ta65-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Rename.displayName = 'Rename';
export const RenameDimensions = {
  height: 24,
  width: 24
};