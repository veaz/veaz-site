import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Pen-title"
  }, title), React.createElement("path", {
    d: "M11.587 6.999H7.702a2 2 0 0 0-1.88 1.316l-3.76 10.342c-.133.365-.042.774.232 1.049l.293.293 6.422-6.422c-.001-.026-.008-.052-.008-.078a1.5 1.5 0 1 1 1.5 1.5c-.026 0-.052-.007-.078-.008l-6.422 6.422.293.293a.997.997 0 0 0 1.049.232l10.342-3.761a2 2 0 0 0 1.316-1.88v-3.885L19 10.414 13.586 5l-1.999 1.999zM19.94 9.061l-5-5L17.06 1.94l5 5z",
    key: "k0"
  }));
});
export const Pen = styled(StyledIcon).withConfig({
  displayName: "Pen",
  componentId: "khy1ns-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Pen.displayName = 'Pen';
export const PenDimensions = {
  height: 24,
  width: 24
};