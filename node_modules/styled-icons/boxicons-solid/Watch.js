import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Watch-title"
  }, title), React.createElement("path", {
    d: "M13 8h-2v5h5v-2h-3z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M16 5.084V2H8v3.083C5.613 6.469 4.001 9.047 4.001 12a8.003 8.003 0 0 0 4.136 7H8v3.041h8V19h-.138a8.002 8.002 0 0 0 4.137-7c0-2.953-1.612-5.53-3.999-6.916zm-4.001 12.915c-3.307 0-5.998-2.691-5.998-5.999s2.691-5.999 5.998-5.999c3.309 0 6 2.691 6 5.999s-2.691 5.999-6 5.999z",
    key: "k1"
  }));
});
export const Watch = styled(StyledIcon).withConfig({
  displayName: "Watch",
  componentId: "bdaj7u-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Watch.displayName = 'Watch';
export const WatchDimensions = {
  height: 24,
  width: 24
};