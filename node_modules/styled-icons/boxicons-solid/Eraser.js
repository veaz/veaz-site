import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Eraser-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M10.224 18a.848.848 0 0 1 .069-.079l4.557-4.557-4.95-4.95-.744.743-4.748 4.837L8.413 18h1.811z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M12.485 3l-4.75 4.749-4.754 4.843a2.005 2.005 0 0 0 .012 2.815l4.299 4.299a.992.992 0 0 0 .707.294H20v-2h-6.958l7.222-7.222c.78-.78.78-2.048 0-2.828L15.313 3a2.001 2.001 0 0 0-2.828 0zM8.413 18l-4.005-4.006 4.748-4.837.743-.743 4.95 4.95-4.557 4.557a.848.848 0 0 0-.069.079h-1.81z",
    key: "k1"
  }));
});
export const Eraser = styled(StyledIcon).withConfig({
  displayName: "Eraser",
  componentId: "sc-1qrun6p-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Eraser.displayName = 'Eraser';
export const EraserDimensions = {
  height: 24,
  width: 24
};