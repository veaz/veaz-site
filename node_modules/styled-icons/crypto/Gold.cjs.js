"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GoldDimensions = exports.Gold = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _isPropValid = _interopRequireDefault(require("@emotion/is-prop-valid"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      otherProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  var svgProps = Object.keys(otherProps).reduce(function (p, k) {
    if ((0, _isPropValid.default)(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Gold-title"
  }, title), React.createElement("path", {
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.25-28C9.26 4 4 9.26 4 15.75S9.26 27.5 15.75 27.5 27.5 22.24 27.5 15.75A11.75 11.75 0 0 0 15.75 4zm0 20.57a8.82 8.82 0 1 1 0-17.64 8.82 8.82 0 0 1 0 17.64zm-2.93-8.81l2.94 4.4 2.92-4.4-2.92-4.41-2.94 4.41z",
    key: "k0"
  }));
});
var Gold = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Goldcjs__Gold",
  componentId: "kim65h-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Gold = Gold;
Gold.displayName = 'Gold';
var GoldDimensions = {
  height: 32,
  width: 32
};
exports.GoldDimensions = GoldDimensions;