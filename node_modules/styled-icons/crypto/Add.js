import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Add-title"
  }, title), React.createElement("path", {
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.984-14.369h-4.928l-.88-2.64h5.8a.748.748 0 1 0 0-1.496H18.7l-2.517-7.673a1.074 1.074 0 0 0-2.12-.07l-6.02 18.303c-.016.1-.016.2 0 .3a1.012 1.012 0 0 0 1.989.246l5.051-15.4 1.443 4.294h-1.25a.748.748 0 1 0 0 1.496h1.76l.88 2.64h-2.64a.748.748 0 1 0 0 1.496h3.16l1.425 4.224h-7.559a1.056 1.056 0 1 0 0 2.112h8.941c.554 0 1.003-.449 1.003-1.003a1.03 1.03 0 0 0-.097-.44l-1.61-4.893h4.4a.748.748 0 1 0 0-1.496h.044z",
    key: "k0"
  }));
});
export const Add = styled(StyledIcon).withConfig({
  displayName: "Add",
  componentId: "oy6cqn-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Add.displayName = 'Add';
export const AddDimensions = {
  height: 32,
  width: 32
};