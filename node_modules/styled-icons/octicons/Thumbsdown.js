import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        otherProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  const svgProps = Object.keys(otherProps).reduce((p, k) => {
    if (validProp(k)) {
      p[k] = otherProps[k];
    }

    return p;
  }, {});
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Thumbsdown-title"
  }, title), React.createElement("path", {
    fillRule: "evenodd",
    d: "M15.938 1.996l1.03 6.318v.01a.272.272 0 0 1 .024.165.623.623 0 0 0-.003.048c-.032 1.243-.87 2.092-2.102 2.092H12.72l.021 1.04C12.742 13.05 11.5 17 9.557 17c-.616 0-1.243-.319-1.657-.818-.382-.446-.53-.976-.446-1.507.266-1.561.297-2.41-.669-3.473-1.062-1.168-1.571-1.645-2.538-1.645H2.124C.998 9.577 0 8.558 0 7.433V3.186C0 2.06.998 1.062 2.124 1.062H3.95L5.48.149C5.637.053 5.83 0 6.041 0h6.7c1.2 0 3.016.53 3.196 1.996zm-3.175 7.582h2.123c.66 0 1.03-.383 1.063-1.062l-1.062-6.371-.021-.021c-.053-.733-1.349-1.062-2.124-1.062H6.021L4.247 2.124v6.37c1.444 0 2.24.797 3.324 1.997 1.306 1.444 1.21 2.718.945 4.396-.085.53.53 1.062 1.062 1.062.881 0 2.123-2.899 2.123-4.248l-.031-1.093c0-.733.35-1.03 1.093-1.03z",
    key: "k0"
  }));
});
export const Thumbsdown = styled(StyledIcon).withConfig({
  displayName: "Thumbsdown",
  componentId: "vupm3r-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Thumbsdown.displayName = 'Thumbsdown';
export const ThumbsdownDimensions = {
  height: 16,
  width: 16
};